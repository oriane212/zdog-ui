[{"/Users/oriane/zdog-ui/reactapp/src/reportWebVitals.js":"1","/Users/oriane/zdog-ui/reactapp/src/index.js":"2","/Users/oriane/zdog-ui/reactapp/src/App.js":"3","/Users/oriane/zdog-ui/reactapp/src/components/NumberInput.js":"4","/Users/oriane/zdog-ui/reactapp/src/components/CheckBox.js":"5","/Users/oriane/zdog-ui/reactapp/src/components/ShapeControls.js":"6","/Users/oriane/zdog-ui/reactapp/src/components/Shape.js":"7","/Users/oriane/zdog-ui/reactapp/src/components/RangeInput.js":"8","/Users/oriane/zdog-ui/reactapp/src/generateID.js":"9"},{"size":362,"mtime":1610686078038,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1610686078038,"results":"12","hashOfConfig":"11"},{"size":3537,"mtime":1611369993838,"results":"13","hashOfConfig":"11"},{"size":684,"mtime":1611105729837,"results":"14","hashOfConfig":"11"},{"size":414,"mtime":1610862756267,"results":"15","hashOfConfig":"11"},{"size":3635,"mtime":1611286785279,"results":"16","hashOfConfig":"11"},{"size":3788,"mtime":1611279505065,"results":"17","hashOfConfig":"11"},{"size":842,"mtime":1611256575978,"results":"18","hashOfConfig":"11"},{"size":389,"mtime":1611257699587,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f8gbtg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oriane/zdog-ui/reactapp/src/reportWebVitals.js",[],["42","43"],"/Users/oriane/zdog-ui/reactapp/src/index.js",[],["44","45"],"/Users/oriane/zdog-ui/reactapp/src/App.js",["46"],"/Users/oriane/zdog-ui/reactapp/src/components/NumberInput.js",[],["47","48"],"/Users/oriane/zdog-ui/reactapp/src/components/CheckBox.js",[],"/Users/oriane/zdog-ui/reactapp/src/components/ShapeControls.js",["49"],"import React from 'react';\nimport Shape from './Shape';\nimport { Button, FormControl, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport generateID from '../generateID';\n\nclass ShapeControls extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectShapeValue: 'Ellipse'\n        }\n        this.shapeparams = {\n            'Ellipse': [\n                { 'diameter': 100 },\n                { 'stroke': 20 }\n            ]\n        }\n        this.handle_onChange = this.handle_onChange.bind(this);\n        this.handle_selectShape = this.handle_selectShape.bind(this);\n        this.handle_onAdd = this.handle_onAdd.bind(this);\n    }\n\n    handle_onChange(e) {\n        console.log('shape controls');\n        this.props.onChange(e);\n    }\n\n    handle_selectShape(e) {\n        this.setState({\n            selectShapeValue: e.target.value\n        })\n    }\n\n    // currently only works for Ellipse\n    handle_onAdd(e) {\n        if (this.state.selectShapeValue === 'Ellipse') {\n            let newshape = {\n                shapeid: 0,\n                shapeClass: this.state.selectShapeValue,\n                params: this.shapeparams[this.state.selectShapeValue]\n            }\n            let newshapearry = [];\n            newshapearry.push(this.props.appstate.shapes);\n            let flattened = newshapearry.flat();\n            flattened.push(newshape);\n            this.props.onAdd(flattened);\n        }\n    }\n\n    render() {\n        let shapes = this.props.appstate.shapes;\n        let shapeComponents = [];\n        if (shapes.length > 0) {\n            shapeComponents = shapes.map((shape) => {\n                return (\n                    <Shape key={generateID()} id={shape.shapeid} appstate={this.props.appstate} onChange={this.handle_onChange}></Shape>\n                )\n            })\n        }\n\n        return (\n            <section className=\"controls_shape\">\n                <header>\n                    <FormControl>\n                        <InputLabel id=\"new-shape-label\">\n                            New Shape\n                        </InputLabel>\n                        <Select value={this.state.selectShapeValue} onChange={this.handle_selectShape}>\n                            <MenuItem value=\"Ellipse\">Ellipse</MenuItem>\n                            <MenuItem value=\"Rectangle\">Rectangle</MenuItem>\n                            <MenuItem value=\"Triangle\">Triangle</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <div className=\"btnContainer\">\n                        <IconButton onClick={this.handle_onAdd} aria-label=\"add\">\n                            <AddIcon color=\"primary\" fontSize=\"small\"/>\n                        </IconButton>\n                        \n                    </div>\n                </header>\n                <div className=\"controlsContainer\">\n                    {shapeComponents}\n                </div>\n\n            </section>\n        );\n    }\n\n}\n\nexport default ShapeControls;\n\n/*\n<select name=\"selectShape\" id=\"selectShape\" onChange={this.handle_selectShape}>\n                        <option value=\"\">New shape</option>\n                        <option value=\"Ellipse\">Ellipse</option>\n                    </select>\n                    */\n//<button id=\"addShapeBtn\" onClick={this.handle_onAdd}>Add</button>\n//<Button color=\"primary\" onClick={this.handle_onAdd} startIcon={<AddIcon />}>Add Shape</Button>","/Users/oriane/zdog-ui/reactapp/src/components/Shape.js",[],"/Users/oriane/zdog-ui/reactapp/src/components/RangeInput.js",[],"/Users/oriane/zdog-ui/reactapp/src/generateID.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":21},{"ruleId":"50","replacedBy":"60"},{"ruleId":"52","replacedBy":"61"},{"ruleId":"56","severity":1,"message":"62","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"no-unused-vars","'ShapeControls' is defined but never used.","Identifier","unusedVar",["63"],["64"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]